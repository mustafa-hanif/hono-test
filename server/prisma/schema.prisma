//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
  output        = "./generated/client"
}

model competition {
  active  Boolean  @default(false)
  created DateTime @default(now())
  id      String   @id() @default(cuid())
  pause   Boolean  @default(false)
  updated DateTime @default(now())
  ended   Boolean  @default(false)
}

model days {
  created     DateTime @default(now())
  description String   @default("")
  id          String   @id() @default(cuid())
  name        String   @default("")
  updated     DateTime @default(now())
  active      Boolean  @default(false)
}

model headings {
  created        DateTime @default(now())
  id             String   @id() @default(cuid())
  name           String   @default("")
  updated        DateTime @default(now())
  day            String   @default("")
  active         Boolean  @default(false)
  heading_number Decimal  @default(0)
}

model stocks {
  bank_name String   @default("")
  created   DateTime @default(now())
  id        String   @id() @default(cuid())
  updated   DateTime @default(now())
}

model stocks_headings {
  created                    DateTime @default(now())
  headings                   String   @default("")
  id                         String   @id() @default(cuid())
  stocks                     String   @default("")
  updated                    DateTime @default(now())
  previous_price             Decimal  @default(0)
  current_price              Decimal  @default(0)
  change_in_price            Decimal  @default(0)
  percentage_change_in_price String   @default("")
}

model stocks_users {
  created               DateTime @default(now())
  id                    String   @id() @default(cuid())
  stocks                String   @default("")
  updated               DateTime @default(now())
  users                 String   @default("")
  share_count           String   @default("")
  balance_when_shorting String   @default("")
  short_share_count     String   @default("")
}

model timer {
  active            Boolean  @default(false)
  competition_end   String   @default("")
  competition_start String   @default("")
  created           DateTime @default(now())
  id                String   @id() @default(cuid())
  updated           DateTime @default(now())
  round_time        Decimal  @default(0)
}

model users {
  avatar          String    @default("")
  created         DateTime  @default(now())
  email           String    @default("")
  emailVisibility Boolean   @default(false)
  id              String    @id() @default(cuid())
  name            String    @default("")
  password        String
  tokenKey        String    @unique(map: "__pb_users_auth__tokenKey_idx")
  updated         DateTime  @default(now())
  username        String    @unique(map: "__pb_users_auth__username_idx")
  verified        Boolean   @default(false)
  type            String    @default("")
  wallet          String    @default("")
  session         session[]
}

model session {
  id        String @id() @default("")
  userId    String
  expiresAt String
  user      users  @relation(fields: [userId], references: [id])
}
